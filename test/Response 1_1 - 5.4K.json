{
  "totalTokens": 5401,
  "transcript": "забавный Парадокс мира ai несколько строк простого кода могут отправить запрос copi и получить данные а сложнейшие языковые модели триллиона параметров обученные на петабайт данных не способны выполнить даже базовые действия в реальном мире проблема Не вычислительной мощности или сложности этих моделей проблема в отсутствии стандартизированного способа которым они могут взаимодействовать с внешними системами Сегодня я покажу вам протокол который может сделать для ai то же что http сделал для интернета превратить изолированные систе в единую функциональную экосистему Привет Я Дмитрий березницкий за 25 лет в it Я видел как технологии проходят путь от хайпа до стандартов с ЛМ сейчас происходит то же что было с веб-технологии в девяностых сначала хаос возможностей потом появление стандартов которые всё меняют я не просто расскажу теорию в концу видео мы посмотрим работающую систему с использованием mcp и LM большинство думает что для создания и агентов нужно строить сложные пайплайн с десятками интеграций и постоянно их поддерживать Это заставляет многих отказываться от использования eii в серьёзных проектах нам не нужно больше интеграции нам нужны стандарты и mcp - первый серьёзный Шаг в этом направления за последний год мне довелось создать несколько продуктовых решений с интеграцией ai в рабочие процессы один из самых интересных проектов - это замена сложной админки с десятками настроек на простой чат интерфейс где бизнес пользователи могли общаться с данными на естественном языке работа с Иа интеграция показала мне что каждая задача требует своего подхода Сегодня я хочу сосредоточиться на mcp протоколе который открывает новый возможности для взаимодействия языковых моделей с внешними сервисами и показывает как мы можем использовать его для создания практичных решений вот что мы сегодня разберём Почему LM сами по себе ограничены для реальных задач и как им нужны доступы к контексту как протокол mcp создаёт мост между моделями и внешними сервисами практическая демонстрация mcp от простых запросов до настоящих транзакций в системе Давайте начнём с главного М - это прежде всего предсказатель следующего слова они потрясающе хороши в этом но сами по себе они ограничены своим обучением и не могут взаимодействовать с внешним миром Если я начну зима крестьянин торжествуя модель безупречно продолжит классику это впечатляет Но что насчёт практических задач попросите даже самую продвинутую модель выполнить Запрос к вашей базе данных или обновить информацию в CRM получите вежливый Отказ А если попросить написать код О тут ЛМ блеснёт она выдаст вам код работающий или нет Это как повезёт Но одно можно сказать точно он будет усыпан комментариями как новогодняя ёлка игрушками ЛМ обожают комментировать каждую строчку каждая действие каждую переменную Почему Потому что интернет на котором они обучались полн именно такого кода но Шутки в сторону ум есть гораздо более серьёзные ограничение Да некоторые современные модели могут выполнять простой Python код в своих песочницах но это всегда изолированная среда с ограниченным набором библиотек и без доступа к вашим реальным системам как только речь заходит это подключение к вашей базе данных доступе к Ci вашего CRM или работе с вашими файлами LM оказывается бессильно без дополнительных инструментов и это Ключевое ограничение глубокий разрыв между миром интеллектуальных моделей и миром ваших бизнес-система ограничения базовой ЛМ отсутствие контекста для принятия решений неспособность выполнять действия без внешних инструментов изоляция от систем в которых хранятся важные данные Представьте вы создаёте ai ассистента для работы с клиентами Вы хотите чтобы он мог находить информацию о клиенте в CRM проверять статус заказов обновлять информацию в базе данных современные м уже умеют работать с изображениями документами Но для доступа к вашим собственным данным нужны дополнительные решения мы подходим к ключевому вопросу Как преодолеть эти ограничения история технологии показывает нам ответ стандартизация вспомните как http стандартизованный языком для баз данных как rest API упростил интеграции в мире м мы сейчас находимся в само начале такого же процесса сегодня большинство разработчиков идёт по пути создания множества отдельных интеграций для каждой системы своя интеграция свой код свой ipi это как собирать пазл где каждый кусочек имеет уникальную форму этот подход работает но имеет огромную цену когда ipi одно из внешних систем изменится или когда вы решите поменять м провайдера приходится переписывать значительную часть кода А если у вас десятки интеграций поддерживать их становится настоящим кошмаром но сейчас появляется новый подход использование льного протокола который может стать стандартом взаимодействия между м и внешними системами Один из таких претендентов Model контек прокол предложенный недавно и уже привлекающий внимание крупных игроков в индустрии Что такое mcp на самом деле и почему он имеет потенциал стать отраслевым стандартом Сейчас я покажу вам архитектуру этого протокола и почему он может радикально изменить способ создания eii систем mcp расшифровывается как мол котек прокол или протокол контекста модели и это не очередная модная аббревиатура а рабочий инструмент который решает реальную проблему вся соль в слове контекст без него даже самая навороченная нейросеть как суперхиро с завязанными глазами в смирительной рубашке теоретически гений а практически бесполезно mcp - это универсальный ключ который выпускает ai из комнаты и даёт ему доступ ко всем дверям в твоём цифровом мире архитектура mcp Да неприличия проста всего два ключевых компонента mcp Client интерфейс для пользователя может быть чем угодно от веб-приложения для плагинов IDE mcp сервер энд который знает как общаться с твоими системами может быть запущен локально или в облаки и ключевой момент Самый сок всей этой кухни - reflection это способность клиента спрашивать у сервера Эй чувак что ты умеешь а сервер отвечает полным списком инструментов ресурсов и других возможностей именно это позволяет ai адаптироваться к новым инструментам без переобучения Как это работает на самом деле давай по-простому без академических зау вот как mcb работает в реальной жизни шаг один запрос Покажи мне все просроченные платежи и предложи стратегию их обработки ты вводишь эту фразу в mcp клиент КД Desktop плагин для vscode или любой другой интерфейс с поддержкой mcp шаг два LM в работе модель анализирует запрос и определяет нужные данные о платежах и стратегический анализ какие инструменты есть у неё для этого для всего здесь нужно кое-что пояснить в реальной среде к твоему II может быть подключено 510 или даже 20 разных mcp серверов у тебя может быть сервер для CRM для RP для документооборота обычно модели достаточно хорошо умеют определять К какой предметной области относится вопрос шаг три reflection и это ключевой момент здесь происходит настоящая магия модель отправляет Запрос reflection к выбранным серверам Эй финансовый сервер что ты умеешь это и есть reflection это как Get Class Get methods в Java или de object в Python только для удалённых сервисов финансовый mcp сервер отвечает структурированным списком инструментов модель получает не просто список команд А полную спецификацию название описание параметры типы данных это как sager UI только для ai и всё это без единой строчки парсинга проверок кейсов и прочей головной боли которая обычно съедает огромное количество времени при разработке EA интеграции до mcp каждый интеграция - это как строительство Бурж Халифа с нуля каждый раз с фундамента с mcp Ты просто выбираешь готовые блоки и соединяешь их Как конструктор в который играл в детстве настоящая революция начинается Когда возникает экосистема mcp серверов Представьте мир где иде каждая saas платформа предлагает свой mcp сервер из коробки подключил и твой II тут же получил доступ к функциям girir sales Force pog vs без единой строчки интеграционного кода это как появление rest API Но для мира ai rest произвёл революцию в том как сервисы общаются друг с другом mcp сделает то же самое для общения ai с этими сервисами для нас разработчиков это меняет всё Помнишь как мы писали километры документации который никто не читал или как судорожно разбирались в чужом API без документации mcp с reflection делает это проблемой прошлого mcp - это тот редкий случай когда стандартизация не ограничивает а освобождает она снимает с нас рутинную работу и позволяет сосредоточиться на том что действительно важно теперь когда мы понимаем концепцию mcp Давайте посмотрим как это работает в реальном приложении Я подготовил систему управления заказами где Ассистент взаимодействует нашим сервисом через mcp это простой чат интерфейс через который мы будем общаться с ассистентом ассистент подключен к mcp серверу Давайте посмотрим как это работает Итак попросим его показать список последних заказов он запрашивает доступ до нашего сервиса мы ему конечно разрешаем его Итак мы видим список заказов которые он нам подготовил их здесь пять и что здесь произошло и ассистент получил запрос определил что нужно получить список заказов и отправил соответствующий Запрос к mcp серверу CP сервер вызвал II нашей системы заказов и вернул результаты в систему которые сформулировал в человека читаемый ответ Итак давайте Запроси у него более подробную информацию Выведи пожалуйста заказ номер 1298 второй раз он у нас уже не спрашивает доступ для нашего ipi и просто нам выводит информацию о заказе основная информация информация о доставке информация о клиенте и смотрите что он нам говорит заказ находится в статусе ожидает оплаты Обратите внимание как и я не только Получил информацию но и проанализировал её это показывает как комбинация данных и системы аналитических способностей создаёт по-настоящему полезный интерфейс Давайте попросим её отправить напоминание о оплате и я опять запрашивает доступ к сервису и мы видим что напоминание об оплате для заказа 1298 успешно отправлено компания получит сообщение на телефон здесь мы видим как ai выполняет реальное действие в системе отправляет напоминание клиенту mcp сервер преобразовал этот запрос вызов соответствующий ipi и действие было выполнено Так давайте теперь создадим новый заказ создай новый заказ на выдуманного пользователя и выдуманный товар Как мы можем видеть Он создал новый заказ со следующими данными есть информация о товари информация о клиенте mcp LM справился с этим автоматически Давайте теперь поменяем статус этого заказа на оплаченный Отметь этот заказ как оплаченный то есть мы в контексте разговора сейчас ему сказали этот заказ но Он поймёт что это наш предыдущий заказ который мы только что создали И как мы видим Он отмечает его как оплаченный Давайте с вами сделаем ещё несколько интересных запросов чтобы понять Как это работает Посчитай На какую сумму Мы продали заказов Давайте посмотрим как же он это посчитает вы видите он Получил информацию обо всех заказах и выдал нам и того На какую сумму у нас было заказов соответственно оплаченных столько-то в пути столько-то и столько-то доставлен и выдал Итого по всем нашим реализованным заказам Давайте придумаем что-нибудь Покажи заказы Ивана он делает Запрос к системе и он выдаёт нам три заказа по Ивану мы можем их увидеть давайте сделаем к нему ещё интересный запрос Выведи заказы с Айфоном и он нам с вами выводит заказ на iPhone его статус стоимость и кто был клиент Это лишь небольшая часть того что возможно с mcp Представьте такой же естественный интерфейс для работы с любыми вашими системами от CRM и erp до специализированных доменных приложений в чём главное преимущество мы не писали никакого специализированного кода для обработки естественного языка E модель сама определяет намерения пользователей и преобразует их в соответствующие вызовы CP сервера а mcp сервер в свою очередь преобразует эти высокоуровневые запросы конкретным API вызовам к вашим системам при этом вся логика вызовов обработки ошибок и форматирования ответов централизована в одном месте важно понимать что это не магия этот стандарт который позволяет разным системам говорить на одном языке и главное что этот стандарт достаточно прост Для внедрения и не требует переписывать существующих систем в начале видео Мы говорили о двух проблемах неспособно TM взаимодействовать с внешним миром и сложность создавать интеграции для каждой системы mcp помогает решить обе эти проблемы использование mcp позволяет вам сэкономить очень много времени на интеграция как http и веб-стандарты превратили интернет из хаотичного набора технологий в единую экосистему так и mcp имеет потенциал стандартизований свиека вот три главных совета по работе с mcp использую его как дополнение к API а не замену mcp - это интерфейс между ai и внешними сервисами а не замена традиционных API разделяйте функциональность на логические mcp серверы Не пытайтесь сделать один сервер для всего mcp спроектирован так чтобы клиент мог использовать несколько серверов соблюдайте высокий уровень абстракции Давайте ai доступ к высокоуровневым действиям разработка с использованием mcp требует определённого подхода и понимания архитектуры Если вам понравилось это видео и вы хотите увидеть как создать собственный mcp серверы пишите об этом в комментариях и тогда в следующих видео я покажу Весь процесс от проектирования до тестирования мир ий быстро меняется но понимание фундаментальных принципов и стандартов поможет вам создавать системы которые будут актуальны долгие годы я надеюсь что это видео помогло вам увидеть потенциал mcp и его применение в реальных проектах в следующем видео реализуем доменную модель с ddd и подходом через связку Клод ПС mcp до встречи а ещё если вам кажется что я слишком упрощают Но помните лучшие понятное упрощение чем непонятное усложнение",
  "chapters": {
    "textLanguage": "ru",
    "blocks": [
      {
        "title": "Введение",
        "text": "забавный Парадокс мира ai несколько строк простого кода могут отправить запрос copi и получить данные а сложнейшие языковые модели триллиона параметров обученные на петабайт данных не способны выполнить даже базовые действия в реальном мире проблема Не вычислительной мощности или сложности этих моделей проблема в отсутствии стандартизированного способа которым они могут взаимодействовать с внешними системами Сегодня я покажу вам протокол который может сделать для ai то же что http сделал для интернета превратить изолированные систе в единую функциональную экосистему Привет Я Дмитрий березницкий за 25 лет в it Я видел как технологии проходят путь от хайпа до стандартов с ЛМ сейчас происходит то же что было с веб-технологии в девяностых сначала хаос возможностей потом появление стандартов которые всё меняют я не просто расскажу теорию в концу видео мы посмотрим работающую систему с использованием mcp и LM большинство думает что для создания и агентов нужно строить сложные пайплайн с десятками интеграций и постоянно их поддерживать Это заставляет многих отказываться от использования eii в серьёзных проектах нам не нужно больше интеграции нам нужны стандарты и mcp - первый серьёзный Шаг в этом направления за последний год мне довелось создать несколько продуктовых решений с интеграцией ai в рабочие процессы один из самых интересных проектов - это замена сложной админки с десятками настроек на простой чат интерфейс где бизнес пользователи могли общаться с данными на естественном языке работа с Иа интеграция показала мне что каждая задача требует своего подхода Сегодня я хочу сосредоточиться на mcp протоколе который открывает новый возможности для взаимодействия языковых моделей с внешними сервисами и показывает как мы можем использовать его для создания практичных решений вот что мы сегодня разберём Почему LM сами по себе ограничены для реальных задач и как им нужны доступы к контексту как протокол mcp создаёт мост между моделями и внешними сервисами практическая демонстрация mcp от простых запросов до настоящих транзакций в системе",
        "tokens": 4999
      },
      {
        "title": "Почему LLM не подходят для реальных задач без контекста",
        "text": "Давайте начнём с главного М - это прежде всего предсказатель следующего слова они потрясающе хороши в этом но сами по себе они ограничены своим обучением и не могут взаимодействовать с внешним миром Если я начну зима крестьянин торжествуя модель безупречно продолжит классику это впечатляет Но что насчёт практических задач попросите даже самую продвинутую модель выполнить Запрос к вашей базе данных или обновить информацию в CRM получите вежливый Отказ А если попросить написать код О тут ЛМ блеснёт она выдаст вам код работающий или нет Это как повезёт Но одно можно сказать точно он будет усыпан комментариями как новогодняя ёлка игрушками ЛМ обожают комментировать каждую строчку каждая действие каждую переменную Почему Потому что интернет на котором они обучались полн именно такого кода но Шутки в сторону ум есть гораздо более серьёзные ограничение Да некоторые современные модели могут выполнять простой Python код в своих песочницах но это всегда изолированная среда с ограниченным набором библиотек и без доступа к вашим реальным системам как только речь заходит это подключение к вашей базе данных доступе к Ci вашего CRM или работе с вашими файлами LM оказывается бессильно без дополнительных инструментов и это Ключевое ограничение глубокий разрыв между миром интеллектуальных моделей и миром ваших бизнес-система ограничения базовой ЛМ отсутствие контекста для принятия решений неспособность выполнять действия без внешних инструментов изоляция от систем в которых хранятся важные данные Представьте вы создаёте ai ассистента для работы с клиентами Вы хотите чтобы он мог находить информацию о клиенте в CRM проверять статус заказов обновлять информацию в базе данных современные м уже умеют работать с изображениями документами Но для доступа к вашим собственным данным нужны дополнительные решения мы подходим к ключевому вопросу Как преодолеть эти ограничения история технологии показывает нам ответ стандартизация вспомните как http стандартизованный языком для баз данных как rest API упростил интеграции в мире м мы сейчас находимся в само начале такого же процесса сегодня большинство разработчиков идёт по пути создания множества отдельных интеграций для каждой системы своя интеграция свой код свой ipi это как собирать пазл где каждый кусочек имеет уникальную форму этот подход работает но имеет огромную цену когда ipi одно из внешних систем изменится или когда вы решите поменять м провайдера приходится переписывать значительную часть кода А если у вас десятки интеграций поддерживать их становится настоящим кошмаром",
        "tokens": 1136
      },
      {
        "title": "MCP как решение",
        "text": "но сейчас появляется новый подход использование льного протокола который может стать стандартом взаимодействия между м и внешними системами Один из таких претендентов Model контек прокол предложенный недавно и уже привлекающий внимание крупных игроков в индустрии Что такое mcp на самом деле и почему он имеет потенциал стать отраслевым стандартом Сейчас я покажу вам архитектуру этого протокола и почему он может радикально изменить способ создания eii систем mcp расшифровывается как мол котек прокол или протокол контекста модели и это не очередная модная аббревиатура а рабочий инструмент который решает реальную проблему вся соль в слове контекст без него даже самая навороченная нейросеть как суперхиро с завязанными глазами в смирительной рубашке теоретически гений а практически бесполезно mcp - это универсальный ключ который выпускает ai из комнаты и даёт ему доступ ко всем дверям в твоём цифровом мире архитектура mcp Да неприличия проста всего два ключевых компонента mcp Client интерфейс для пользователя может быть чем угодно от веб-приложения для плагинов IDE mcp сервер энд который знает как общаться с твоими системами может быть запущен локально или в облаки и ключевой момент Самый сок всей этой кухни - reflection это способность клиента спрашивать у сервера Эй чувак что ты умеешь а сервер отвечает полным списком инструментов ресурсов и других возможностей именно это позволяет ai адаптироваться к новым инструментам без переобучения Как это работает на самом деле давай по-простому без академических зау вот как mcb работает в реальной жизни шаг один запрос Покажи мне все просроченные платежи и предложи стратегию их обработки ты вводишь эту фразу в mcp клиент КД Desktop плагин для vscode или любой другой интерфейс с поддержкой mcp шаг два LM в работе модель анализирует запрос и определяет нужные данные о платежах и стратегический анализ какие инструменты есть у неё для этого для всего здесь нужно кое-что пояснить в реальной среде к твоему II может быть подключено 510 или даже 20 разных mcp серверов у тебя может быть сервер для CRM для RP для документооборота обычно модели достаточно хорошо умеют определять К какой предметной области относится вопрос шаг три reflection и это ключевой момент здесь происходит настоящая магия модель отправляет Запрос reflection к выбранным серверам Эй финансовый сервер что ты умеешь это и есть reflection это как Get Class Get methods в Java или de object в Python только для удалённых сервисов финансовый mcp сервер отвечает структурированным списком инструментов модель получает не просто список команд А полную спецификацию название описание параметры типы данных это как sager UI только для ai и всё это без единой строчки парсинга проверок кейсов и прочей головной боли которая обычно съедает огромное количество времени при разработке EA интеграции до mcp каждый интеграция - это как строительство Бурж Халифа с нуля каждый раз с фундамента с mcp Ты просто выбираешь готовые блоки и соединяешь их Как конструктор в который играл в детстве настоящая революция начинается Когда возникает экосистема mcp серверов Представьте мир где иде каждая saas платформа предлагает свой mcp сервер из коробки подключил и твой II тут же получил доступ к функциям girir sales Force pog vs без единой строчки интеграционного кода это как появление rest API Но для мира ai rest произвёл революцию в том как сервисы общаются друг с другом mcp сделает то же самое для общения ai с этими сервисами для нас разработчиков это меняет всё Помнишь как мы писали километры документации который никто не читал или как судорожно разбирались в чужом API без документации mcp с reflection делает это проблемой прошлого mcp - это тот редкий случай когда стандартизация не ограничивает а освобождает она снимает с нас рутинную работу и позволяет сосредоточиться на том что действительно важно теперь когда мы понимаем концепцию mcp",
        "tokens": 1060
      },
      {
        "title": "Демонстрация: как AI выполняет действия через MCP",
        "text": "Давайте посмотрим как это работает в реальном приложении Я подготовил систему управления заказами где Ассистент взаимодействует нашим сервисом через mcp это простой чат интерфейс через который мы будем общаться с ассистентом ассистент подключен к mcp серверу Давайте посмотрим как это работает Итак попросим его показать список последних заказов он запрашивает доступ до нашего сервиса мы ему конечно разрешаем его Итак мы видим список заказов которые он нам подготовил их здесь пять и что здесь произошло и ассистент получил запрос определил что нужно получить список заказов и отправил соответствующий Запрос к mcp серверу CP сервер вызвал II нашей системы заказов и вернул результаты в систему которые сформулировал в человека читаемый ответ Итак давайте Запроси у него более подробную информацию Выведи пожалуйста заказ номер 1298 второй раз он у нас уже не спрашивает доступ для нашего ipi и просто нам выводит информацию о заказе основная информация информация о доставке информация о клиенте и смотрите что он нам говорит заказ находится в статусе ожидает оплаты Обратите внимание как и я не только Получил информацию но и проанализировал её это показывает как комбинация данных и системы аналитических способностей создаёт по-настоящему полезный интерфейс Давайте попросим её отправить напоминание о оплате и я опять запрашивает доступ к сервису и мы видим что напоминание об оплате для заказа 1298 успешно отправлено компания получит сообщение на телефон здесь мы видим как ai выполняет реальное действие в системе отправляет напоминание клиенту mcp сервер преобразовал этот запрос вызов соответствующий ipi и действие было выполнено Так давайте теперь создадим новый заказ создай новый заказ на выдуманного пользователя и выдуманный товар Как мы можем видеть Он создал новый заказ со следующими данными есть информация о товари информация о клиенте mcp LM справился с этим автоматически Давайте теперь поменяем статус этого заказа на оплаченный Отметь этот заказ как оплаченный то есть мы в контексте разговора сейчас ему сказали этот заказ но Он поймёт что это наш предыдущий заказ который мы только что создали И как мы видим Он отмечает его как оплаченный Давайте с вами сделаем ещё несколько интересных запросов чтобы понять Как это работает Посчитай На какую сумму Мы продали заказов Давайте посмотрим как же он это посчитает вы видите он Получил информацию обо всех заказах и выдал нам и того На какую сумму у нас было заказов соответственно оплаченных столько-то в пути столько-то и столько-то доставлен и выдал Итого по всем нашим реализованным заказам Давайте придумаем что-нибудь Покажи заказы Ивана он делает Запрос к системе и он выдаёт нам три заказа по Ивану мы можем их увидеть давайте сделаем к нему ещё интересный запрос Выведи заказы с Айфоном и он нам с вами выводит заказ на iPhone его статус стоимость и кто был клиент Это лишь небольшая часть того что возможно с mcp Представьте такой же естественный интерфейс для работы с любыми вашими системами от CRM и erp до специализированных доменных приложений в чём главное преимущество мы не писали никакого специализированного кода для обработки естественного языка E модель сама определяет намерения пользователей и преобразует их в соответствующие вызовы CP сервера а mcp сервер в свою очередь преобразует эти высокоуровневые запросы конкретным API вызовам к вашим системам при этом вся логика вызовов обработки ошибок и форматирования ответов централизована в одном месте важно понимать что это не магия этот стандарт который позволяет разным системам говорить на одном языке и главное что этот стандарт достаточно прост Для внедрения и не требует переписывать существующих систем",
        "tokens": 1214
      },
      {
        "title": "Заключение",
        "text": "В начале видео Мы говорили о двух проблемах неспособно TM взаимодействовать с внешним миром и сложность создавать интеграции для каждой системы mcp помогает решить обе эти проблемы использование mcp позволяет вам сэкономить очень много времени на интеграция как http и веб-стандарты превратили интернет из хаотичного набора технологий в единую экосистему так и mcp имеет потенциал стандартизований свиека вот три главных совета по работе с mcp использую его как дополнение к API а не замену mcp - это интерфейс между ai и внешними сервисами а не замена традиционных API",
        "tokens": 475
      }
    ]
  },
  "semantic": {
    "textLanguage": "ru",
    "blocks": [
      {
        "title": "Парадокс возможностей AI",
        "text": "забавный Парадокс мира ai несколько строк простого кода могут отправить запрос copi и получить данные а сложнейшие языковые модели триллиона параметров обученные на петабайт данных не способны выполнить даже базовые действия в реальном мире проблема Не вычислительной мощности или сложности этих моделей проблема в отсутствии стандартизированного способа которым они могут взаимодействовать с внешними системами",
        "tokens": 67
      },
      {
        "title": "Введение в протокол MCP",
        "text": "Сегодня я покажу вам протокол который может сделать для ai то же что http сделал для интернета превратить изолированные систе в единую функциональную экосистему Привет Я Дмитрий березницкий за 25 лет в it Я видел как технологии проходят путь от хайпа до стандартов с ЛМ сейчас происходит то же что было с веб-технологии в девяностых сначала хаос возможностей потом появление стандартов которые всё меняют я не просто расскажу теорию в концу видео мы посмотрим работающую систему с использованием mcp и LM",
        "tokens": 90
      },
      {
        "title": "Проблемы создания AI-агентов",
        "text": "большинство думает что для создания и агентов нужно строить сложные пайплайн с десятками интеграций и постоянно их поддерживать Это заставляет многих отказываться от использования eii в серьёзных проектах нам не нужно больше интеграции нам нужны стандарты и mcp - первый серьёзный Шаг в этом направления",
        "tokens": 57
      },
      {
        "title": "Опыт интеграции AI в бизнес-процессы",
        "text": "за последний год мне довелось создать несколько продуктовых решений с интеграцией ai в рабочие процессы один из самых интересных проектов - это замена сложной админки с десятками настроек на простой чат интерфейс где бизнес пользователи могли общаться с данными на естественном языке работа с Иа интеграция показала мне что каждая задача требует своего подхода Сегодня я хочу сосредоточиться на mcp протоколе который открывает новый возможности для взаимодействия языковых моделей с внешними сервисами и показывает как мы можем использовать его для создания практичных решений",
        "tokens": 92
      },
      {
        "title": "План видео по MCP",
        "text": "вот что мы сегодня разберём Почему LM сами по себе ограничены для реальных задач и как им нужны доступы к контексту как протокол mcp создаёт мост между моделями и внешними сервисами практическая демонстрация mcp от простых запросов до настоящих транзакций в системе",
        "tokens": 47
      },
      {
        "title": "Ограничения языковых моделей",
        "text": "Давайте начнём с главного М - это прежде всего предсказатель следующего слова они потрясающе хороши в этом но сами по себе они ограничены своим обучением и не могут взаимодействовать с внешним миром Если я начну зима крестьянин торжествуя модель безупречно продолжит классику это впечатляет Но что насчёт практических задач попросите даже самую продвинутую модель выполнить Запрос к вашей базе данных или обновить информацию в CRM получите вежливый Отказ А если попросить написать код О тут ЛМ блеснёт она выдаст вам код работающий или нет Это как повезёт Но одно можно сказать точно он будет усыпан комментариями как новогодняя ёлка игрушками ЛМ обожают комментировать каждую строчку каждая действие каждую переменную Почему Потому что интернет на котором они обучались полн именно такого кода",
        "tokens": 127
      },
      {
        "title": "Ограничения и изоляция моделей",
        "text": "но Шутки в сторону ум есть гораздо более серьёзные ограничение Да некоторые современные модели могут выполнять простой Python код в своих песочницах но это всегда изолированная среда с ограниченным набором библиотек и без доступа к вашим реальным системам как только речь заходит это подключение к вашей базе данных доступе к Ci вашего CRM или работе с вашими файлами LM оказывается бессильно без дополнительных инструментов и это Ключевое ограничение глубокий разрыв между миром интеллектуальных моделей и миром ваших бизнес-система ограничения базовой ЛМ отсутствие контекста для принятия решений неспособность выполнять действия без внешних инструментов изоляция от систем в которых хранятся важные данные",
        "tokens": 117
      },
      {
        "title": "Пример с AI ассистентом",
        "text": "Представьте вы создаёте ai ассистента для работы с клиентами Вы хотите чтобы он мог находить информацию о клиенте в CRM проверять статус заказов обновлять информацию в базе данных современные м уже умеют работать с изображениями документами Но для доступа к вашим собственным данным нужны дополнительные решения",
        "tokens": 52
      },
      {
        "title": "Роль стандартизации в решении проблем",
        "text": "мы подходим к ключевому вопросу Как преодолеть эти ограничения история технологии показывает нам ответ стандартизация вспомните как http стандартизованный языком для баз данных как rest API упростил интеграции в мире м мы сейчас находимся в само начале такого же процесса сегодня большинство разработчиков идёт по пути создания множества отдельных интеграций для каждой системы своя интеграция свой код свой ipi это как собирать пазл где каждый кусочек имеет уникальную форму этот подход работает но имеет огромную цену когда ipi одно из внешних систем изменится или когда вы решите поменять м провайдера приходится переписывать значительную часть кода А если у вас десятки интеграций поддерживать их становится настоящим кошмаром",
        "tokens": 117
      },
      {
        "title": "Новый подход с универсальным протоколом",
        "text": "но сейчас появляется новый подход использование льного протокола который может стать стандартом взаимодействия между м и внешними системами Один из таких претендентов Model контек прокол предложенный недавно и уже привлекающий внимание крупных игроков в индустрии Что такое mcp на самом деле и почему он имеет потенциал стать отраслевым стандартом Сейчас я покажу вам архитектуру этого протокола и почему он может радикально изменить способ создания eii систем",
        "tokens": 88
      },
      {
        "title": "Определение MCP",
        "text": "mcp расшифровывается как мол котек прокол или протокол контекста модели и это не очередная модная аббревиатура а рабочий инструмент который решает реальную проблему вся соль в слове контекст без него даже самая навороченная нейросеть как суперхиро с завязанными глазами в смирительной рубашке теоретически гений а практически бесполезно mcp - это универсальный ключ который выпускает ai из комнаты и даёт ему доступ ко всем дверям в твоём цифровом мире",
        "tokens": 90
      },
      {
        "title": "Архитектура MCP",
        "text": "архитектура mcp Да неприличия проста всего два ключевых компонента mcp Client интерфейс для пользователя может быть чем угодно от веб-приложения для плагинов IDE mcp сервер энд который знает как общаться с твоими системами может быть запущен локально или в облаки и ключевой момент Самый сок всей этой кухни - reflection это способность клиента спрашивать у сервера Эй чувак что ты умеешь а сервер отвечает полным списком инструментов ресурсов и других возможностей именно это позволяет ai адаптироваться к новым инструментам без переобучения",
        "tokens": 108
      },
      {
        "title": "Принцип работы MCP",
        "text": "Как это работает на самом деле давай по-простому без академических зау вот как mcb работает в реальной жизни шаг один запрос Покажи мне все просроченные платежи и предложи стратегию их обработки ты вводишь эту фразу в mcp клиент КД Desktop плагин для vscode или любой другой интерфейс с поддержкой mcp шаг два LM в работе модель анализирует запрос и определяет нужные данные о платежах и стратегический анализ какие инструменты есть у неё для этого для всего здесь нужно кое-что пояснить в реальной среде к твоему II может быть подключено 510 или даже 20 разных mcp серверов у тебя может быть сервер для CRM для RP для документооборота обычно модели достаточно хорошо умеют определять К какой предметной области относится вопрос",
        "tokens": 122
      },
      {
        "title": "Reflection в MCP",
        "text": "шаг три reflection и это ключевой момент здесь происходит настоящая магия модель отправляет Запрос reflection к выбранным серверам Эй финансовый сервер что ты умеешь это и есть reflection это как Get Class Get methods в Java или de object в Python только для удалённых сервисов финансовый mcp сервер отвечает структурированным списком инструментов модель получает не просто список команд А полную спецификацию название описание параметры типы данных это как sager UI только для ai и всё это без единой строчки парсинга проверок кейсов и прочей головной боли которая обычно съедает огромное количество времени при разработке EA интеграции",
        "tokens": 124
      },
      {
        "title": "Преимущества MCP перед традиционными интеграциями",
        "text": "до mcp каждый интеграция - это как строительство Бурж Халифа с нуля каждый раз с фундамента с mcp Ты просто выбираешь готовые блоки и соединяешь их Как конструктор в который играл в детстве настоящая революция начинается Когда возникает экосистема mcp серверов Представьте мир где иде каждая saas платформа предлагает свой mcp сервер из коробки подключил и твой II тут же получил доступ к функциям girir sales Force pog vs без единой строчки интеграционного кода это как появление rest API Но для мира ai rest произвёл революцию в том как сервисы общаются друг с другом mcp сделает то же самое для общения ai с этими сервисами",
        "tokens": 117
      },
      {
        "title": "Изменения для разработчиков с MCP",
        "text": "для нас разработчиков это меняет всё Помнишь как мы писали километры документации который никто не читал или как судорожно разбирались в чужом API без документации mcp с reflection делает это проблемой прошлого mcp - это тот редкий случай когда стандартизация не ограничивает а освобождает она снимает с нас рутинную работу и позволяет сосредоточиться на том что действительно важно",
        "tokens": 74
      },
      {
        "title": "Демонстрация MCP в системе заказов",
        "text": "теперь когда мы понимаем концепцию mcp Давайте посмотрим как это работает в реальном приложении Я подготовил систему управления заказами где Ассистент взаимодействует нашим сервисом через mcp это простой чат интерфейс через который мы будем общаться с ассистентом ассистент подключен к mcp серверу Давайте посмотрим как это работает Итак попросим его показать список последних заказов он запрашивает доступ до нашего сервиса мы ему конечно разрешаем его Итак мы видим список заказов которые он нам подготовил их здесь пять и что здесь произошло и ассистент получил запрос определил что нужно получить список заказов и отправил соответствующий Запрос к mcp серверу CP сервер вызвал II нашей системы заказов и вернул результаты в систему которые сформулировал в человека читаемый ответ",
        "tokens": 130
      },
      {
        "title": "Запрос подробной информации о заказе",
        "text": "Итак давайте Запроси у него более подробную информацию Выведи пожалуйста заказ номер 1298 второй раз он у нас уже не спрашивает доступ для нашего ipi и просто нам выводит информацию о заказе основная информация информация о доставке информация о клиенте и смотрите что он нам говорит заказ находится в статусе ожидает оплаты Обратите внимание как и я не только Получил информацию но и проанализировал её это показывает как комбинация данных и системы аналитических способностей создаёт по-настоящему полезный интерфейс",
        "tokens": 97
      },
      {
        "title": "Отправка напоминания об оплате",
        "text": "Давайте попросим её отправить напоминание о оплате и я опять запрашивает доступ к сервису и мы видим что напоминание об оплате для заказа 1298 успешно отправлено компания получит сообщение на телефон здесь мы видим как ai выполняет реальное действие в системе отправляет напоминание клиенту mcp сервер преобразовал этот запрос вызов соответствующий ipi и действие было выполнено",
        "tokens": 75
      },
      {
        "title": "Создание нового заказа",
        "text": "Так давайте теперь создадим новый заказ создай новый заказ на выдуманного пользователя и выдуманный товар Как мы можем видеть Он создал новый заказ со следующими данными есть информация о товари информация о клиенте mcp LM справился с этим автоматически",
        "tokens": 49
      },
      {
        "title": "Обновление статуса заказа",
        "text": "Давайте теперь поменяем статус этого заказа на оплаченный Отметь этот заказ как оплаченный то есть мы в контексте разговора сейчас ему сказали этот заказ но Он поймёт что это наш предыдущий заказ который мы только что создали И как мы видим Он отмечает его как оплаченный",
        "tokens": 56
      },
      {
        "title": "Примеры запросов и аналитика",
        "text": "Давайте с вами сделаем ещё несколько интересных запросов чтобы понять Как это работает Посчитай На какую сумму Мы продали заказов Давайте посмотрим как же он это посчитает вы видите он Получил информацию обо всех заказах и выдал нам и того На какую сумму у нас было заказов соответственно оплаченных столько-то в пути столько-то и столько-то доставлен и выдал Итого по всем нашим реализованным заказам",
        "tokens": 84
      },
      {
        "title": "Фильтрация заказов по клиенту и товару",
        "text": "Давайте придумаем что-нибудь Покажи заказы Ивана он делает Запрос к системе и он выдаёт нам три заказа по Ивану мы можем их увидеть давайте сделаем к нему ещё интересный запрос Выведи заказы с Айфоном и он нам с вами выводит заказ на iPhone его статус стоимость и кто был клиент",
        "tokens": 59
      },
      {
        "title": "Потенциал MCP для любых систем",
        "text": "Это лишь небольшая часть того что возможно с mcp Представьте такой же естественный интерфейс для работы с любыми вашими системами от CRM и erp до специализированных доменных приложений в чём главное преимущество мы не писали никакого специализированного кода для обработки естественного языка E модель сама определяет намерения пользователей и преобразует их в соответствующие вызовы CP сервера а mcp сервер в свою очередь преобразует эти высокоуровлевые запросы конкретным API вызовам к вашим системам при этом вся логика вызовов обработки ошибок и форматирования ответов централизована в одном месте",
        "tokens": 97
      },
      {
        "title": "Простота и стандартизация MCP",
        "text": "важно понимать что это не магия этот стандарт который позволяет разным системам говорить на одном языке и главное что этот стандарт достаточно прост Для внедрения и не требует переписывать существующих систем",
        "tokens": 38
      },
      {
        "title": "Решение проблем с помощью MCP",
        "text": "в начале видео Мы говорили о двух проблемах неспособно TM взаимодействовать с внешним миром и сложность создавать интеграции для каждой системы mcp помогает решить обе эти проблемы использование mcp позволяет вам сэкономить очень много времени на интеграция как http и веб-стандарты превратили интернет из хаотичного набора технологий в единую экосистему так и mcp имеет потенциал стандартизований свиека",
        "tokens": 75
      },
      {
        "title": "Советы по работе с MCP",
        "text": "вот три главных совета по работе с mcp использую его как дополнение к API а не замену mcp - это интерфейс между ai и внешними сервисами а не замена традиционных API разделяйте функциональность на логические mcp серверы Не пытайтесь сделать один сервер для всего mcp спроектирован так чтобы клиент мог использовать несколько серверов соблюдайте высокий уровень абстракции Давайте ai доступ к высокоуровневым действиям разработка с использованием mcp требует определённого подхода и понимания архитектуры",
        "tokens": 92
      },
      {
        "title": "Приглашение к обучению MCP",
        "text": "Если вам понравилось это видео и вы хотите увидеть как создать собственный mcp серверы пишите об этом в комментариях и тогда в следующих видео я покажу Весь процесс от проектирования до тестирования мир ий быстро меняется но понимание фундаментальных принципов и стандартов поможет вам создавать системы которые будут актуальны долгие годы я надеюсь что это видео помогло вам увидеть потенциал mcp и его применение в реальных проектах в следующем видео реализуем доменную модель с ddd и подходом через связку Клод ПС mcp до встречи а ещё если вам кажется что я слишком упрощают Но помните лучшие понятное упрощение чем непонятное усложнение",
        "tokens": 108
      }
    ]
  }
}